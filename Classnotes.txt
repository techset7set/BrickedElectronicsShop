2/20/2017
    We followed ch. 3 in the textbook.
    
    rails generate controller StaticPages <list of actions>
        SPController inherits from the application controller
    
    .erb - html file that can have embedded ruby
        indicated with <%= ... %>
        
    testing
        code: 200 is a successful response
        
    test driven development (TDD)
        writing tests before the code.
        KATA
        Good for:
            Security code
            Refactoring code - Internal (ONLY) changes to code
    
2/22/2017
    Continuing Ch. 3...
    
    More TDD
        Added select tests to find an HTML element with certain text in it
        Can also add Ruby to the testing file (Can create variables to remove redundant code)
        
    FOR PROJECT (By next week)
        -Homepage exists w/ basic content about prod/service
        -Navigation links exist
        -Main layout is visible
        -Basic styling is available
        -Rails framework is utilized
        
2/27/2017
    Ruby Syntax
    
    yield/provide
        Allows for information to be passed between pages.
        
3/1/2017
    Test info(Ruby):
    Be prepared to know about interpolation, concatenation, difference of single/double quotes
        Object (everything is object)
        passing messages (printing to screen, I think?)
        Boolean methods end with '?'
        Methods ending in '!' mutate the data
        if, elif, else
        minimal parenthesis
        method chaining
        alternate (self-contained) if statements [AKA One liners]
        don't /need/ returns
        Arrays - Initialization(ranges) - Stack -> Push/Pop
        Ranges - Parenths if using a method on range
        Hashes - (1) user = {"firstname"=>"tanner",....}
            Hashes extremely common in rails
            (2) user = { :firstName => "tanner",... }
            ':' indicates a symbol - an uninstantiable, immutable object - Symbol class
            (3) user = { firstName: "tanner",... }
                Now that its set as a symbol, the symbol will reference it -> user[:firstname]
                Can init a spot in a hash, without its pre-existance
                Hashes are nestable -> params[:user][:firstname]
        Blocks
            user.each { |key, value| puts "#{key} has value #{value}" }
            
            user.each do |key, value|
                puts "#{key} has value #{value}"
            end
            
        Inspect method
            -Gives a literal representation of the object
            puts (1..5).to_a  VS  puts (1..5).to_a.inspect
            
            